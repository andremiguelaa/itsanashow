{"v":"5.9.4","fr":25,"ip":0,"op":100,"w":1080,"h":1080,"nm":"Comp 3","ddd":0,"assets":[{"id":"comp_0","nm":"Comp 2","fr":25,"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Comp 1","parent":3,"refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":261,"ix":10},"p":{"a":0,"k":[576.217,485.451,0],"ix":2,"l":2},"a":{"a":0,"k":[540,540,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"w":1080,"h":1080,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":0,"nm":"Comp 1","parent":3,"refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":118,"ix":10},"p":{"a":0,"k":[500.93,574.143,0],"ix":2,"l":2},"a":{"a":0,"k":[540,540,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"w":1080,"h":1080,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":0,"nm":"Comp 1","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":149,"s":[360]}],"ix":10},"p":{"a":0,"k":[833,813.5,0],"ix":2,"l":2},"a":{"a":0,"k":[540,540,0],"ix":1,"l":2},"s":{"a":0,"k":[154.259,150.648,100],"ix":6,"l":2}},"ao":0,"w":1080,"h":1080,"ip":0,"op":150,"st":0,"bm":0}]},{"id":"comp_1","nm":"Comp 1","fr":25,"layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Wiggle It! Controllers","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[540,540,0],"ix":2,"l":2},"a":{"a":0,"k":[540,540,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Wiggle It - Shared_POS","np":20,"mn":"Pseudo/TPCFf9b93eabf","ix":1,"en":1,"ef":[{"ty":6,"nm":"Wiggle","mn":"Pseudo/TPCFf9b93eabf-0001","ix":1,"v":0},{"ty":6,"nm":"","mn":"Pseudo/TPCFf9b93eabf-0002","ix":2,"v":0},{"ty":0,"nm":"Amp","mn":"Pseudo/TPCFf9b93eabf-0003","ix":3,"v":{"a":0,"k":100,"ix":3}},{"ty":7,"nm":"Oscillate","mn":"Pseudo/TPCFf9b93eabf-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":7,"nm":"Constrain Proportions","mn":"Pseudo/TPCFf9b93eabf-0005","ix":5,"v":{"a":0,"k":0,"ix":5}},{"ty":0,"nm":"Freq","mn":"Pseudo/TPCFf9b93eabf-0006","ix":6,"v":{"a":0,"k":5,"ix":6}},{"ty":0,"nm":"Freq Random","mn":"Pseudo/TPCFf9b93eabf-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":6,"nm":"Offset Time","mn":"Pseudo/TPCFf9b93eabf-0008","ix":8,"v":0},{"ty":0,"nm":"X Time Offset","mn":"Pseudo/TPCFf9b93eabf-0009","ix":9,"v":{"a":0,"k":0,"ix":9}},{"ty":0,"nm":"Y Time Offset","mn":"Pseudo/TPCFf9b93eabf-0010","ix":10,"v":{"a":0,"k":0,"ix":10}},{"ty":0,"nm":"Z Time Offset","mn":"Pseudo/TPCFf9b93eabf-0011","ix":11,"v":{"a":0,"k":0,"ix":11}},{"ty":6,"nm":"","mn":"Pseudo/TPCFf9b93eabf-0012","ix":12,"v":0},{"ty":6,"nm":"Other Options","mn":"Pseudo/TPCFf9b93eabf-0013","ix":13,"v":0},{"ty":0,"nm":"Hold Time (frames)","mn":"Pseudo/TPCFf9b93eabf-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":7,"nm":"Loop Time (frames)","mn":"Pseudo/TPCFf9b93eabf-0015","ix":15,"v":{"a":0,"k":0,"ix":15}},{"ty":7,"nm":"Layer Index Seed","mn":"Pseudo/TPCFf9b93eabf-0016","ix":16,"v":{"a":0,"k":1,"ix":16}},{"ty":7,"nm":"Random Seed","mn":"Pseudo/TPCFf9b93eabf-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/TPCFf9b93eabf-0018","ix":18,"v":0}]}],"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":3,"nm":"Null 50","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[547.08,498.775,0],"ix":2,"l":2},"a":{"a":0,"k":[50,50,0],"ix":1,"l":2},"s":{"a":0,"k":[50,50,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":3,"nm":"Layer 1: Path 1 [1.1.0]","cl":"1 0","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-58.469,-242.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":3,"nm":"Layer 1: Path 1 [1.1.1]","cl":"1 1","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-249.531,252.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":3,"nm":"Layer 1: Path 1 [1.1.2]","cl":"1 2","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[56.469,129.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":3,"nm":"Layer 1: Path 1 [1.1.3]","cl":"1 3","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-136.469,282.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":3,"nm":"Layer 1: Path 1 [1.1.4]","cl":"1 4","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[127.531,141.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":3,"nm":"Layer 1: Path 1 [1.1.5]","cl":"1 5","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[57.031,-67.562,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":3,"nm":"Layer 1: Path 1 [1.1.6]","cl":"1 6","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-202.469,33.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":3,"nm":"Layer 1: Path 1 [1.1.7]","cl":"1 7","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-160.469,-179.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":3,"nm":"Layer 1: Path 1 [1.1.8]","cl":"1 8","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-43.469,-83.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":3,"nm":"Layer 1: Path 1 [1.1.9]","cl":"1 9","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[57.031,239.562,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":3,"nm":"Layer 1: Path 1 [1.1.10]","cl":"1 10","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[349.531,48.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":3,"nm":"Layer 1: Path 1 [1.1.11]","cl":"1 11","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[166.531,-185.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":15,"ty":3,"nm":"Layer 1: Path 1 [1.1.12]","cl":"1 12","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-136.469,-71.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":16,"ty":3,"nm":"Layer 1: Path 1 [1.1.13]","cl":"1 13","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-76.469,264.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":17,"ty":3,"nm":"Layer 1: Path 1 [1.1.14]","cl":"1 14","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[295.531,207.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":18,"ty":3,"nm":"Layer 1: Path 1 [1.1.15]","cl":"1 15","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[118.531,-23.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":19,"ty":3,"nm":"Layer 1: Path 1 [1.1.16]","cl":"1 16","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-217.469,252.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":20,"ty":3,"nm":"Layer 1: Path 1 [1.1.17]","cl":"1 17","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[214.906,342.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":21,"ty":3,"nm":"Layer 1: Path 1 [1.1.18]","cl":"1 18","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-118.469,141.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":22,"ty":3,"nm":"Layer 1: Path 1 [1.1.19]","cl":"1 19","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-13.469,-140.125,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":23,"ty":3,"nm":"Layer 1: Path 1 [1.1.20]","cl":"1 20","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[274.531,33.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":24,"ty":3,"nm":"Layer 1: Path 1 [1.1.21]","cl":"1 21","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-43.469,15.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":25,"ty":3,"nm":"Layer 1: Path 1 [1.1.22]","cl":"1 22","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-214.469,341,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":26,"ty":3,"nm":"Layer 1: Path 1 [1.1.23]","cl":"1 23","parent":2,"sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[181.531,132.875,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar e, freq, freqRandom, loopTime, holdTime, postTime, postTime, postTime, ranSeed, ranSeed, ranSeed, xOffset, xOffset, xOffset, yOffset, yOffset, yOffset, zOffset, zOffset, zOffset, t, wiggleA, wiggleB;\ne = thisComp.layer('Wiggle It! Controllers').effect('Wiggle It - Shared_POS');\nfreq = e('Freq');\nfreqRandom = $bm_div(e('Freq Random'), 150);\nloopTime = framesToTime(e('Loop Time (frames)'));\nholdTime = framesToTime(e('Hold Time (frames)'));\nholdTime > 0 ? postTime = $bm_mul(Math.floor($bm_div(time, holdTime)), holdTime) : postTime = time;\ne('Layer Index Seed') == true ? ranSeed = $bm_sum(index, e('Random Seed')) : ranSeed = e('Random Seed');\ne('Oscillate') == true ? xOffset = $bm_div(e('X Time Offset').valueAtTime(postTime), 2) : xOffset = e('X Time Offset').valueAtTime(postTime);\ne('Oscillate') == true ? yOffset = $bm_div(e('Y Time Offset').valueAtTime(postTime), 2) : yOffset = e('Y Time Offset').valueAtTime(postTime);\n$bm_rt = e('Oscillate') == true ? zOffset = $bm_div(e('Z Time Offset').valueAtTime(postTime), 2) : zOffset = e('Z Time Offset').valueAtTime(postTime);\nfunction WiggleItClassic(t) {\n    var accum, n, k, k1, k2, durStart, durEnd, oscX, durStartX, durEndX, durSegX, difStartX, difEndX, oscY, durStartY, durEndY, durSegY, difStartY, difEndY, oscZ, durStartZ, durEndZ, durSegZ, difStartZ, difEndZ, maxOff, i, difEndZ, max, durDifX, x, x, x, v1, durDifY, y, y, y, v2, durDifZ, z, z, z, v3, wI, wI, durDifX, x, x, x, v1, wI;\n    seedRandom(ranSeed, true);\n    time > inPoint && loopTime > 0 ? accum = $bm_mul(freq.valueAtTime(inPoint), $bm_sub(t, inPoint)) : accum = 0;\n    if (time >= inPoint) {\n        n = freq.numKeys;\n        if (n > 1 && freq.key(n).time > inPoint) {\n            for (k = 1; k <= n; k++) {\n                if (freq.key(k).time >= inPoint) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.valueAtTime(inPoint)), $bm_sub(t, inPoint)), 2);\n                    } else {\n                        accum = $bm_div($bm_mul($bm_sum(freq.key(k).value, freq.valueAtTime(inPoint)), $bm_sub(freq.key(k).time, inPoint)), 2);\n                    }\n                    break;\n                }\n            }\n            if (k < n && freq.key(k).time < t) {\n                k = $bm_sum(k, 1);\n                for (k; k <= n; k++) {\n                    if (freq.key(k).time > t) {\n                        accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key($bm_sub(k, 1)).value), $bm_sub(t, freq.key($bm_sub(k, 1)).time)), 2));\n                        break;\n                    }\n                    k1 = freq.key($bm_sub(k, 1));\n                    k2 = freq.key(k);\n                    accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(k1.value, k2.value), $bm_sub(k2.time, k1.time)), 2));\n                }\n            }\n            if (freq.key(n).time < t) {\n                accum = $bm_sum(accum, $bm_div($bm_mul($bm_sum(freq.valueAtTime(t), freq.key(n).value), $bm_sub(t, freq.key(n).time)), 2));\n            }\n        } else {\n            accum = $bm_mul(freq.valueAtTime(inPoint), t);\n        }\n    }\n    durStart = 0;\n    durEnd = $bm_sum($bm_sum(durStart, 1), random($bm_neg(freqRandom), freqRandom));\n    oscX = 0;\n    durStartX = durStart;\n    durEndX = durEnd;\n    durSegX = 1;\n    difStartX = 0;\n    difEndX = $bm_sub(durSegX, durEndX);\n    oscY = 0;\n    durStartY = durStart;\n    durEndY = durEnd;\n    durSegY = 1;\n    difStartY = 0;\n    difEndY = $bm_sub(durSegY, durEndY);\n    oscZ = 0;\n    durStartZ = durStart;\n    durEndZ = durEnd;\n    durSegZ = 1;\n    difStartZ = 0;\n    difEndZ = $bm_sub(durSegZ, durEndZ);\n    maxOff = Math.max(xOffset, yOffset, zOffset);\n    for (i = durEnd; i <= accum + maxOff; i += durEnd - durStart) {\n        durStart = durEnd;\n        durEnd = $bm_sum(durEnd, $bm_sum(1, random($bm_neg(freqRandom), freqRandom)));\n        if (i <= $bm_sum(accum, xOffset)) {\n            oscX = $bm_sum(oscX, 1);\n            durStartX = durStart;\n            durEndX = durEnd;\n            durSegX = $bm_sum(durSegX, 1);\n            difStartX = difEndX;\n            difEndX = $bm_sub(durSegX, durEndX);\n        }\n        if (i <= $bm_sum(accum, yOffset)) {\n            oscY = $bm_sum(oscY, 1);\n            durStartY = durStart;\n            durEndY = durEnd;\n            durSegY = $bm_sum(durSegY, 1);\n            difStartY = difEndY;\n            difEndY = $bm_sub(durSegY, durEndY);\n        }\n        if (i <= $bm_sum(accum, zOffset)) {\n            oscZ = $bm_sum(oscZ, 1);\n            durStartZ = durStart;\n            durEndZ = durEnd;\n            durSegZ = $bm_sum(durSegZ, 1);\n            difStartZ = difEndZ;\n            difEndZ = $bm_sub(durSegZ, durEndZ);\n        }\n    }\n    max = 1000000;\n    if ($bm_isInstanceOfArray(value)) {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX))[0];\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        durDifY = linear($bm_sum(accum, yOffset), durStartY, durEndY, difStartY, difEndY);\n        e('Oscillate') == true ? y = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, yOffset), durDifY), 2), Math.PI))) : y = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, yOffset), durDifY))[1];\n        v2 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), y);\n        if (value.length > 2) {\n            durDifZ = linear($bm_sum(accum, zOffset), durStartZ, durEndZ, difStartZ, difEndZ);\n            e('Oscillate') == true ? z = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, zOffset), durDifZ), 2), Math.PI))) : z = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, zOffset), durDifZ))[2];\n            v3 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), z);\n            wI = [\n                v1,\n                v2,\n                v3\n            ];\n        } else\n            wI = [\n                v1,\n                v2\n            ];\n    } else {\n        durDifX = linear($bm_sum(accum, xOffset), durStartX, durEndX, difStartX, difEndX);\n        e('Oscillate') == true ? x = $bm_mul(max, Math.sin($bm_mul($bm_mul($bm_sum($bm_sum(accum, xOffset), durDifX), 2), Math.PI))) : x = wiggle(1, max, 1, 0.5, $bm_sum($bm_sum(accum, xOffset), durDifX));\n        v1 = $bm_mul($bm_div(e('Amp').valueAtTime(t), max), x);\n        wI = v1;\n    }\n    return $bm_sum(value, wI);\n}\nif (loopTime == 0) {\n    $bm_rt = WiggleItClassic(postTime);\n} else {\n    if (time >= inPoint) {\n        t = $bm_sum($bm_mod(postTime, loopTime), inPoint);\n        wiggleA = WiggleItClassic(t);\n        wiggleB = WiggleItClassic($bm_sub(t, loopTime));\n        $bm_rt = linear(t, inPoint, $bm_sum(inPoint, loopTime), wiggleA, wiggleB);\n    } else {\n        $bm_rt = WiggleItClassic(postTime);\n    }\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":27,"ty":4,"nm":"Layer 1","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-0.156,88.25,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[300,300,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Layer 1: Path 1 [1.1.0]","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":3,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.1]","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":4,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.2]","np":3,"mn":"ADBE Layer Control","ix":3,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":5,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.3]","np":3,"mn":"ADBE Layer Control","ix":4,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.4]","np":3,"mn":"ADBE Layer Control","ix":5,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":7,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.5]","np":3,"mn":"ADBE Layer Control","ix":6,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":8,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.6]","np":3,"mn":"ADBE Layer Control","ix":7,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":9,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.7]","np":3,"mn":"ADBE Layer Control","ix":8,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":10,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.8]","np":3,"mn":"ADBE Layer Control","ix":9,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":11,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.9]","np":3,"mn":"ADBE Layer Control","ix":10,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":12,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.10]","np":3,"mn":"ADBE Layer Control","ix":11,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":13,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.11]","np":3,"mn":"ADBE Layer Control","ix":12,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":14,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.12]","np":3,"mn":"ADBE Layer Control","ix":13,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":15,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.13]","np":3,"mn":"ADBE Layer Control","ix":14,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":16,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.14]","np":3,"mn":"ADBE Layer Control","ix":15,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":17,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.15]","np":3,"mn":"ADBE Layer Control","ix":16,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":18,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.16]","np":3,"mn":"ADBE Layer Control","ix":17,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":19,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.17]","np":3,"mn":"ADBE Layer Control","ix":18,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":20,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.18]","np":3,"mn":"ADBE Layer Control","ix":19,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":21,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.19]","np":3,"mn":"ADBE Layer Control","ix":20,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":22,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.20]","np":3,"mn":"ADBE Layer Control","ix":21,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":23,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.21]","np":3,"mn":"ADBE Layer Control","ix":22,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":24,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.22]","np":3,"mn":"ADBE Layer Control","ix":23,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":25,"ix":1}}]},{"ty":5,"nm":"Layer 1: Path 1 [1.1.23]","np":3,"mn":"ADBE Layer Control","ix":24,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":26,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[92.97,-8.343],[-57,-76],[4.438,32.7],[-22,-4],[-18,34],[16.5,5.817],[29,-2],[-72,5],[0,0],[-96.5,-20.563],[0,0],[66,12],[15,-22],[-36,-37],[-5,49],[27,3],[8,-66],[-6.183,40.272],[54,0],[-129,-4],[0,0],[93,63],[-91,-32],[-9,38]],"o":[[-78,7],[36.437,48.583],[-5.506,-40.568],[31.499,5.727],[18,-34],[-16.5,-5.817],[-29,2],[71.417,-4.96],[0,0],[96.5,20.563],[0,0],[-66,-12],[-15,22],[36,37],[5,-49],[-27,-3],[-8,66],[6.183,-40.272],[-54,0],[129,4],[0,0],[-93,-63],[91,32],[9,-38]],"v":[[-19.469,-110.107],[-83.135,54.893],[18.865,13.893],[-45.469,64.893],[42.531,17.893],[19.031,-51.925],[-67.469,-18.107],[-53.469,-89.107],[-14.468,-57.107],[19.031,50.456],[116.531,-13.107],[55.531,-91.107],[-45.469,-53.107],[-25.469,58.893],[98.531,39.893],[39.531,-37.107],[-72.469,54.893],[71.714,84.621],[-39.469,17.893],[-4.469,-76.107],[91.532,-18.107],[-14.468,-24.107],[-71.469,84.226],[60.532,14.893]],"c":true},"ix":2,"x":"var $bm_rt;\nvar nullLayerNames = [\n    'Layer 1: Path 1 [1.1.0]',\n    'Layer 1: Path 1 [1.1.1]',\n    'Layer 1: Path 1 [1.1.2]',\n    'Layer 1: Path 1 [1.1.3]',\n    'Layer 1: Path 1 [1.1.4]',\n    'Layer 1: Path 1 [1.1.5]',\n    'Layer 1: Path 1 [1.1.6]',\n    'Layer 1: Path 1 [1.1.7]',\n    'Layer 1: Path 1 [1.1.8]',\n    'Layer 1: Path 1 [1.1.9]',\n    'Layer 1: Path 1 [1.1.10]',\n    'Layer 1: Path 1 [1.1.11]',\n    'Layer 1: Path 1 [1.1.12]',\n    'Layer 1: Path 1 [1.1.13]',\n    'Layer 1: Path 1 [1.1.14]',\n    'Layer 1: Path 1 [1.1.15]',\n    'Layer 1: Path 1 [1.1.16]',\n    'Layer 1: Path 1 [1.1.17]',\n    'Layer 1: Path 1 [1.1.18]',\n    'Layer 1: Path 1 [1.1.19]',\n    'Layer 1: Path 1 [1.1.20]',\n    'Layer 1: Path 1 [1.1.21]',\n    'Layer 1: Path 1 [1.1.22]',\n    'Layer 1: Path 1 [1.1.23]'\n];\nvar origPath = thisProperty;\nvar origPoints = origPath.points();\nvar origInTang = origPath.inTangents();\nvar origOutTang = origPath.outTangents();\nvar getNullLayers = [];\nfor (var i = 0, il = nullLayerNames.length; i < il; i++) {\n    try {\n        getNullLayers.push(effect(nullLayerNames[i])('ADBE Layer Control-0001'));\n    } catch (err) {\n        getNullLayers.push(null);\n    }\n}\nfor (var i = 0, il = getNullLayers.length; i < il; i++) {\n    if (getNullLayers[i] != null && getNullLayers[i].index != thisLayer.index) {\n        origPoints[i] = fromCompToSurface(getNullLayers[i].toComp(getNullLayers[i].anchorPoint));\n    }\n}\n$bm_rt = createPath(origPoints, origInTang, origOutTang, origPath.isClosed());"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.435294117647,0.152941176471,0.980392156863,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":2,"lj":1,"ml":10,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150,"st":0,"ct":1,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Comp 2","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[511.518,525.514,0],"ix":2,"l":2},"a":{"a":0,"k":[789.064,791.677,0],"ix":1,"l":2},"s":{"a":0,"k":[67,67,100],"ix":6,"l":2}},"ao":0,"tm":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":149,"s":[5.96]}],"ix":2,"x":"var $bm_rt;\nposterizeTime(8);\n$bm_rt = value;"},"w":1666,"h":1627,"ip":0,"op":150,"st":0,"ct":1,"bm":0}],"markers":[]}
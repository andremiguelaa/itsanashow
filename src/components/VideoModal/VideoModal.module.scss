@import 'mixins.scss';

.modalWrapper {
  position: fixed;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 100;
  pointer-events: none;
  transition: clip-path 1s cubic-bezier(0.8, 0, 0.2, 1);
  clip-path: polygon(0 50%, 100% 50%, 100% 50%, 0 50%);
  &.openModal {
    pointer-events: all;
    clip-path: polygon(0 100%, 100% 100%, 100% 0, 0 0);
  }
}
.modal {
  position: absolute;
  min-height: 100vh;
  min-height: -webkit-fill-available;
  width: 100%;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(8, 20, 45, 0.95);
  text-align: center;
  color: #08142d;
  .poster,
  video {
    max-width: 80vh;
    width: calc(100% - 100px);
    height: 100%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .close {
    position: absolute;
    top: 2.5rem;
    right: 50%;
    cursor: pointer;
    display: block;
    width: 40px;
    height: 40px;
    overflow: hidden;
    border: none;
    padding: 0;
    background-color: transparent;
    transform: scale(0.75) translate(calc(80vh - 120px));
    @include tablet {
      top: 1.5rem;
      right: 1.5rem;
      transform: scale(0.75);
    }
    @include mobile {
      top: 0.5rem;
      right: 0.5rem;
      transform: scale(0.5);
    }
    > div {
      position: relative;
    }
    .closeButtonBlock {
      width: 40px;
      height: 20px;
      position: relative;
      overflow: hidden;
      &:before,
      &:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: calc(55% - 4px);
        display: block;
        width: 4px;
        height: 25px;
        transform-origin: bottom center;
        background: #fe00ae;
        transition: all ease-out 280ms;
      }
      &:last-of-type {
        transform: rotate(180deg);
      }
    }
    .in {
      .closeButtonBlock {
        &:before {
          transition-delay: 280ms;
          transform: translateX(20px) translateY(-20px) rotate(45deg);
        }
        &:after {
          transition-delay: 280ms;
          transform: translateX(-22px) translateY(-22px) rotate(-45deg);
        }
      }
    }
    .out {
      position: absolute;
      top: 0;
      left: 0;
      .closeButtonBlock {
        &:before {
          transform: translateX(-5px) translateY(5px) rotate(45deg);
        }
        &:after {
          transform: translateX(5px) translateY(5px) rotate(-45deg);
        }
      }
    }
    &:hover,
    &:focus {
      .in {
        .closeButtonBlock {
          &:before {
            transform: translateX(-5px) translateY(5px) rotate(45deg);
          }
          &:after {
            transform: translateX(5px) translateY(5px) rotate(-45deg);
          }
        }
      }
      .out {
        .closeButtonBlock {
          &:before {
            transform: translateX(-20px) translateY(20px) rotate(45deg);
          }
          &:after {
            transform: translateX(20px) translateY(20px) rotate(-45deg);
          }
        }
      }
    }
    &:focus {
      outline: none;
    }
  }
}
